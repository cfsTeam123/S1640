﻿@RenderSection("scripts", required: false)
@using S1640.Models;
@{
    S1640Entities conn = new S1640Entities();
    int UserNo = Convert.ToInt32(Session["Userid"]);
    int mSubscID = Convert.ToByte(Session["SubscID"]);
    string UserType = Convert.ToString(Session["UserType"]);
    string CompName = "";
    string mEmail = "";
    Session.Timeout = 30;
    var user = conn.UserMasters.Where(x => x.MTransNo == UserNo).FirstOrDefault();
    if (user != null)
    {
        Session["Userid"] = user.MTransNo;
        Session["SubscID"] = mSubscID;
        Session["UserType"] = user.UserType;
        var Comp = conn.Companies.FirstOrDefault();
        if (Comp != null)
        {
            Session["CompNo"] = Comp.MTransNo;
            Session["CompName"] = Comp.CompName;
            Session["CStateCode"] = Comp.StateCode;
            Session["CompCode"] = Comp.CompCode;
            Session["CYear"] = 2122;
            CompName = Comp.CompName;
            mEmail = Comp.GeneralEmail;
        }
    }
    else
    {
        Response.Redirect("~/Home/Login");
    }
    int SubscID = Convert.ToByte(Session["SubscID"]);
    var User = conn.UserMasters.Where(x => x.MTransNo == UserNo).FirstOrDefault();
    var AdminMenuList = (from M in conn.Menulists
                         where M.DSLNo > 0
                         select new
                         {
                             DSalNo = M.DSLNo,
                             Department = M.Department
                         }).Distinct().OrderBy(x => x.DSalNo).ToList();
}
<!DOCTYPE html>
<html class="fixed sidebar-left-collapsed">
<head>
    <!-- Basic -->
    <meta charset="UTF-8">
    @*<link rel="shortcut icon" href="~/Content/img/C_icon.png">*@
    <title>CFS</title>
    <!-- Basic -->
    <meta charset="UTF-8">
    <meta name="keywords" content="CREINTORS" />
    <meta name="description" content="Creintors Automation Solutions Pvt. Ltd.">
    <meta name="author" content="Creintors">
    <!-- Mobile Metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <!-- Web Fonts  -->
    @*<link href="~/fonts/css.css" rel="stylesheet" />*@
    @Html.Partial("_jsHeader")

    <style>
         Loading Screen 
        #loading {
            display: block;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 100;
            width: 100vw;
            height: 100vh;
            background-color: rgba(34, 193, 195, 0.2);  Soft teal background 
            background-image: url("../Content/img/Loader.gif");
            background-repeat: no-repeat;
            background-position: center;
            animation: fadeIn 0.5s ease-in-out;
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
            }

            to {
                opacity: 1;
            }
        }
        /*#loading {
            display: flex;
            justify-content: center;
            align-items: center;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 100;
            width: 100vw;
            height: 100vh;
            background-color: rgba(192, 192, 192, 0.2);
        }*/

        /* Loader container */
        /*.loader-animation {
            width: 200px;
            height: 60px;
            position: relative;
        }*/

        /* Animated circles */
        /*.circle {
            width: 20px;
            height: 20px;
            position: absolute;
            border-radius: 50%;
            transform-origin: 50%;
            animation: circle7124 0.5s alternate infinite ease;
        }*/

            /* Different colors for each dot */
            /*.circle:nth-child(1) {
                background-color: #FF6B6B;*/ /* red-pink */
                /*left: 15%;
                animation-delay: 0s;
            }

            .circle:nth-child(2) {
                background-color: #FFD93D;*/ /* yellow */
                /*left: 45%;
                animation-delay: 0.2s;
            }

            .circle:nth-child(3) {
                background-color: #6BCB77;*/ /* green */
                /*left: auto;
                right: 15%;
                animation-delay: 0.3s;
            }


        @@keyframes circle7124 {
            0% {
                top: 60px;
                height: 5px;
                border-radius: 50px 50px 25px 25px;
                transform: scaleX(1.7);
            }

            40% {
                height: 20px;
                border-radius: 50%;
                transform: scaleX(1);
            }

            100% {
                top: 0%;
            }
        }*/



        /* Shadows */
        /*.shadow {
            width: 20px;
            height: 4px;
            border-radius: 50%;
            background-color: rgba(0, 0, 0, 0.9);
            position: absolute;
            top: 62px;
            transform-origin: 50%;
            z-index: -1;
            left: 15%;
            animation: shadow046 0.5s alternate infinite ease;
        }

        @@keyframes shadow046 {
            0% {
                transform: scaleX(1.5);
            }

            40% {
                transform: scaleX(1);
                opacity: 0.7;
            }

            100% {
                transform: scaleX(0.2);
                opacity: 0.4;
            }
        }*/

        .shadow:nth-child(4) {
            left: 45%;
            animation-delay: 0.2s;
        }

        .shadow:nth-child(5) {
            left: auto;
            right: 15%;
            animation-delay: 0.3s;
            /* Autocomplete Items */
            .autocomplete-items {
            position: absolute;
            border: 1px solid #ccc;
            border-radius: 5px;
            z-index: 99;
            top: 100%;
            left: 0;
            right: 0;
            background: linear-gradient(135deg, #f6f8f9, #ffffff);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

            .autocomplete-items div {
                padding: 12px;
                cursor: pointer;
                background-color: #f9f9f9;
                font-size: 16px;
                border-bottom: 1px solid #e0e0e0;
                transition: background-color 0.3s ease;
            }

                .autocomplete-items div:hover {
                    background-color: #1e90ff;
                    color: white;
                }

        .autocomplete-active {
            background-color: #28a745 !important;
            color: white;
        }

        /* Body */
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #eef2f7;
            color: #2c3e50;
            margin: 0;
            padding: 0;
        }

        /* Notification Badge */
        .notification {
            background-color: #8e44ad; /* Purple background */
            color: white;
            text-decoration: none;
            padding: 10px 14px;
            position: relative;
            display: inline-block;
            border-radius: 50%;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }

            .notification:hover {
                background: #9b59b6; /* Lighter purple on hover */
            }

            .notification .badge {
                position: absolute;
                top: -8px;
                right: -8px;
                padding: 6px 8px;
                border-radius: 50%;
                background-color: #e74c3c; /* Red badge */
                color: white;
                font-weight: bold;
                font-size: 14px;
            }

        /* Rating */
        .rating {
            display: inline-block;
            width: auto;
            height: 35px;
            direction: rtl;
            margin-top: 20px;
        }

            .rating > input {
                opacity: 0;
                margin-right: -100%;
            }

            .rating > label {
                display: inline-block;
                width: 35px;
                height: 35px;
                background: url('star-off-big.png') no-repeat center center;
                background-size: contain;
                cursor: pointer;
                transition: transform 0.3s ease, background 0.3s;
            }

                .rating > label:before {
                    content: '';
                    width: 100%;
                    height: 100%;
                    background: url('star-on-big.png') no-repeat center center;
                    background-size: contain;
                    opacity: 0;
                    transition: opacity 0.2s linear;
                }

                .rating > label:hover {
                    transform: scale(1.1);
                    background-color: rgba(255, 223, 0, 0.8);
                }

                    .rating > label:hover:before, .rating > label:hover ~ label:before, .rating:not(:hover) > :checked ~ label:before {
                        opacity: 1;
                    }

                /* Hover Effects for Star Ratings */
                .rating > label:hover {
                    background-color: #ffd700;
                }
    </style>


</head>
<body>
    <header class="header header-nav-menu header-nav-top-line">
        <div class="row" style="width:100%; margin:0px; padding:0px;">
            <div class="col-lg-4" style="margin:0px; padding:0px;">
                <a href="~/Home/Index" class="logo text-center">
                    <font size="6"><b>CFS</b></font><br />
                    <h6 id="time" style="margin-right:15px; margin-top:-5px;"> Session ends in 30:00</h6>
                </a>
            </div>
            <div class="col-lg-3 search nav-form text-center">
                <div class="input-group">
                    <input type="text" class="form-control" name="serPag" id="serPag" placeholder="Search...">
                    <span class="input-group-append">
                        <button class="btn btn-default" onclick="callMe()"><i class="fas fa-search"></i></button>
                    </span>
                </div>
            </div>
            <div class="col-lg-1 text-right" style="padding-right:8px;">
                <ul class="notifications">
                    <li style="margin-right:0px;">
                        <a href="~/Home/MsgAlerts?Sender=0" class="notification-icon" title="Alerts">
                            <i class="fas fa-tasks"></i>
                            <input type="hidden" id="UserNo" value=@UserNo name="UserNo" />
                            <span id="MsgCount" class="badge"></span>
                        </a>
                    </li>
                </ul>
            </div>
            <div class="col-lg-3 header-right text-right fixedHeader-locked" style="margin:-1px; padding:0px">
                <div id="userbox" class="userbox">
                    <a href="#" data-toggle="dropdown">
                        <i class="fa custom-caret"></i>
                    </a>
                    <div class="dropdown-menu">
                        <ul class="list-unstyled mb-2">
                            <li class="divider"></li>
                            <li>
                                <a role="menuitem" tabindex="-1" href="/Company/Index"><i class="fas fa-user"></i> My Profile</a>
                            </li>
                            <li>
                                <a role="menuitem" tabindex="-1" href="/Home/ChangePassword"><i class="fas fa-user-lock"></i> Change Password</a>
                            </li>
                            <li>
                                <a role="menuitem" tabindex="-1" href="/Home/LogOut"><i class="fas fa-power-off"></i>Logout</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="d-md-none toggle-sidebar-left" data-toggle-class="sidebar-left-opened" data-target="html" data-fire-event="sidebar-left-opened">
                <i class="fas fa-bars" aria-label="Toggle sidebar"></i>
            </div>
        </div>
    </header>
    <!-- end: header -->
    <!-- start: sidebar -->
    <section>
        <aside id="sidebar-left" class="sidebar-left" style="color:red">
            <div class="sidebar-header">
                <div class="sidebar-toggle d-none d-md-block" data-toggle-class="sidebar-left-collapsed" data-target="html" data-fire-event="sidebar-left-toggle">
                    <i class="fas fa-bars" aria-label="Toggle sidebar"></i>
                </div>
            </div>
            <div class="nano">
                <div class="nano-content">
                    <nav id="menu" class="nav-main" role="navigation">
                        @try
                        {

                            if (@User.UserType == "ADMIN" || @User.UserType == null)
                            {
                            <ul class="nav nav-main">
                                <li>
                                    <a class="nav-link" href="~/Home/Index">
                                        <i class="fas fa-home" aria-hidden="true"></i>
                                        <span>HOME</span>
                                    </a>
                                </li>
                                @foreach (var item1 in AdminMenuList)
                                {
                                    <li class="nav-parent">
                                        @if (item1.Department == "BUSINESS DEVELOPMENT")
                                        {
                                            <a class="nav-link" href="#">
                                                <i class="fas fa-chart-area" aria-hidden="true"></i>
                                                <span>PRODUCTION</span>
                                            </a>
                                        }
                                        <ul class="nav nav-children">

                                            <li class="nav nav-parent">
                                                <a class="nav-link" href="#">
                                                    <i class="fas fa-list-ul" aria-hidden="true"></i>
                                                    <span>TRANSACTIONS</span>
                                                </a>
                                                <ul class="nav nav-children">
                                                    @{
                                                        var AllList1 = (from MO in conn.Menulists
                                                                        where MO.ModuleType == "TRANSACTIONS" && MO.Department == item1.Department && MO.DSLNo > 0
                                                                        select new
                                                                        {
                                                                            SlNo = MO.MSLNo,
                                                                            ModuleName = MO.ModuleName,
                                                                            ModulePage = MO.ModulePage,
                                                                            ModuleLink = MO.ModuleLink
                                                                        }).OrderBy(x => x.SlNo).ToList();
                                                    }
                                                    @foreach (var item in AllList1)
                                                    {
                                                        <li>@Html.ActionLink(item.ModuleName, item.ModulePage, item.ModuleLink, null, new { @class = "nav-link" })</li>
                                                    }
                                                </ul>
                                            </li>
                                            <li class="nav nav-parent">
                                                <a class="nav-link" href="#">
                                                    <i class="fas fa-clipboard-list" aria-hidden="true"></i>
                                                    <span>REPORTS</span>
                                                </a>
                                                <ul class="nav nav-children">
                                                    @{
                                                        var AllList2 = (from MO in conn.Menulists
                                                                        where MO.ModuleType == "REPORTS" && MO.Department == item1.Department && MO.DSLNo > 0
                                                                        select new
                                                                        {
                                                                            SlNo = MO.MSLNo,
                                                                            ModuleName = MO.ModuleName,
                                                                            ModulePage = MO.ModulePage,
                                                                            ModuleLink = MO.ModuleLink
                                                                        }).OrderBy(x => x.SlNo).ToList();
                                                    }
                                                    @foreach (var item in AllList2)
                                                    {
                                                        <li>@Html.ActionLink(item.ModuleName, item.ModulePage, item.ModuleLink, null, new { @class = "nav-link" })</li>
                                                    }
                                                </ul>
                                            </li>
                                            <li class="nav-parent">
                                                <a class="nav-link" href="#">
                                                    <i class="fas fa-book-open" aria-hidden="true"></i>
                                                    <span>MASTERS</span>
                                                </a>
                                                <ul class="nav nav-children">
                                                    @{
                                                        var AllList = (from MO in conn.Menulists
                                                                       where MO.ModuleType == "MASTERS" && MO.Department == item1.Department && MO.DSLNo > 0
                                                                       select new
                                                                       {
                                                                           SlNo = MO.MSLNo,
                                                                           ModuleName = MO.ModuleName,
                                                                           ModulePage = MO.ModulePage,
                                                                           ModuleLink = MO.ModuleLink
                                                                       }).OrderBy(x => x.SlNo).ToList();
                                                    }
                                                    @foreach (var item in AllList)
                                                    {
                                                        <li>@Html.ActionLink(item.ModuleName, item.ModulePage, item.ModuleLink, null, new { @class = "nav-link" })</li>
                                                    }
                                                </ul>
                                            </li>
                                        </ul>

                                    </li>
                                                        }
                            </ul>
                                                        }
                                                        else
                                                        {
                            <ul class="nav nav-main">
                                <li>
                                    <a class="nav-link" href="~/Home/Index">
                                        <i class="fas fa-home" aria-hidden="true"></i>
                                        <span>HOME</span>
                                    </a>
                                </li>
                                @foreach (var item1 in AdminMenuList)
                                {
                                    <li class="nav-parent">
                                        @if (item1.Department == "BUSINESS DEVELOPMENT")
                                        {
                                            <a class="nav-link" href="#">
                                                <i class="fas fa-chart-area" aria-hidden="true"></i>
                                                <span>@item1.Department</span>
                                            </a>
                                        }
                                        <ul class="nav nav-children">

                                            <li class="nav nav-parent">
                                                <a class="nav-link" href="#">
                                                    <i class="fas fa-list-ul" aria-hidden="true"></i>
                                                    <span>TRANSACTIONS</span>
                                                </a>
                                                <ul class="nav nav-children">
                                                    @{
                                                        var AllList1 = (from MO in conn.Menulists
                                                                        where MO.ModuleType == "TRANSACTIONS" && MO.Department == item1.Department && MO.DSLNo > 0
                                                                        select new
                                                                        {
                                                                            SlNo = MO.MSLNo,
                                                                            ModuleName = MO.ModuleName,
                                                                            ModulePage = MO.ModulePage,
                                                                            ModuleLink = MO.ModuleLink
                                                                        }).OrderBy(x => x.SlNo).ToList();
                                                    }
                                                    @foreach (var item in AllList1)
                                                    {
                                                        <li>@Html.ActionLink(item.ModuleName, item.ModulePage, item.ModuleLink, null, new { @class = "nav-link" })</li>
                                                    }
                                                </ul>
                                            </li>
                                            <li class="nav nav-parent">
                                                <a class="nav-link" href="#">
                                                    <i class="fas fa-clipboard-list" aria-hidden="true"></i>
                                                    <span>REPORTS</span>
                                                </a>
                                                <ul class="nav nav-children">
                                                    @{
                                                        var AllList2 = (from MO in conn.Menulists
                                                                        where MO.ModuleType == "REPORTS" && MO.Department == item1.Department && MO.DSLNo > 0
                                                                        select new
                                                                        {
                                                                            SlNo = MO.MSLNo,
                                                                            ModuleName = MO.ModuleName,
                                                                            ModulePage = MO.ModulePage,
                                                                            ModuleLink = MO.ModuleLink
                                                                        }).OrderBy(x => x.SlNo).ToList();
                                                    }
                                                    @foreach (var item in AllList2)
                                                    {
                                                        <li>@Html.ActionLink(item.ModuleName, item.ModulePage, item.ModuleLink, null, new { @class = "nav-link" })</li>
                                                    }
                                                </ul>
                                            </li>
                                        </ul>
                                    </li>
                                                        }
                            </ul>
                                                                }
                                                            }
                                                            catch (Exception e) { }

                                                        
                    </nav>
                </div>
                <script>
                    // Maintain Scroll Position
                    if (typeof localStorage !== 'undefined') {
                        if (localStorage.getItem('sidebar-left-position') !== null) {
                            var initialPosition = localStorage.getItem('sidebar-left-position'),
                                sidebarLeft = document.querySelector('#sidebar-left .nano-content');
                                                                sidebarLeft.scrollTop = initialPosition;
                        }
                                                        }
                                                        var modNms;
                                                        var modLks;
                                                        window.addEventListener("load", function (evt) {
                                                            var fift1 = 60 * 0.2,
                                                                display1 = document.querySelector('#MsgCount');
                                                            GetmsgCount(fift1, display1);
                        $.ajax({
                                                            type: "POST",
                            url: "/Home/GetMenu",
                            data: { DtlString: "user" },
                            success: function (result) {

                                                                    var tep = result.split("$");
                                                                    modNms = new Array(tep.length - 1);
                                                                    modLks = new Array(tep.length - 1);
                                                                    for (var i = 0; i < tep.length - 1; i++) {
                                                                        var ech = tep[i].split("~");
                                                                        modNms[i] = ech[0];
                                                                        modLks[i] = "/" + ech[1] + "/" + ech[2];
                                                                    }
                                                                },
                            error: function (xhr, status, error) {
                                                                    alert(error);
                                                                },
                            async: false
                        });
                                                            autocomplete(document.getElementById("serPag"), modNms);
                                                        });
                                                        function callMe() {
                                                            var ss = $("#serPag").val();
                                                            for (var m = 0; m < modNms.length; m++) {
                                                                if (ss == modNms[m]) {
                                                                    window.location.href = modLks[m];
                                                                }
                                                            }
                                                        }
                                                        function GetmsgCount(duration, display) {
                                                            var timer = duration, minutes, seconds;
                                                            setInterval(function () {
                                                                minutes = parseInt(timer / 60, 10);
                                                                seconds = parseInt(timer % 60, 10);
                                                                minutes = minutes < 10 ? "0" + minutes : minutes;
                                                                seconds = seconds < 10 ? "0" + seconds : seconds;
                                                                if (--timer == -1) {
                                $.ajax({
                                                                    type: "POST",
                                    url: "/Home/GetmsgCount",
                                    datatype: "Json",
                                    data: { UserNo: $('#UserNo').val() },
                                    success: function (result1) {
                                                                            if (result1 > 0) {
                                                                                display.textContent = result1;
                                                                            }
                                                                            timer = duration;
                                                                        }
                                                                    });
                            }
                        }, 100);
                    }
                    function autocomplete(inp, arr) {
                                                            var currentFocus;
                                                            inp.addEventListener("input", function (e) {
                                                                var a, b, i, val = this.value;
                                                                closeAllLists();
                                                                if (!val) { return false; }
                                                                currentFocus = -1;
                                                                a = document.createElement("DIV");
                                                                a.setAttribute("id", this.id + "autocomplete-list");
                                                                a.setAttribute("class", "autocomplete-items text-left");
                                                                this.parentNode.appendChild(a);
                                                                for (i = 0; i < arr.length; i++) {
                                                                    if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                                                                        b = document.createElement("DIV");
                                                                        b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                                                                        b.innerHTML += arr[i].substr(val.length);
                                                                        b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                                                                        b.addEventListener("click", function (e) {
                                                                            inp.value = this.getElementsByTagName("input")[0].value;
                                                                            closeAllLists();
                                                                        });
                                                        a.appendChild(b);
                                }
                            }
                        });
                                                        inp.addEventListener("keydown", function (e) {
                                                            var x = document.getElementById(this.id + "autocomplete-list");
                                                            if (x) x = x.getElementsByTagName("div");
                                                            if (e.keyCode == 40) {
                                                                currentFocus++;
                                                                addActive(x);
                                                            } else if (e.keyCode == 38) {
                                                                addActive(x);
                                                            } else if (e.keyCode == 13) {
                                                                e.preventDefault();
                                                                if (currentFocus > -1) {
                                                                    if (x) x[currentFocus].click();
                                                                }
                                                            }
                                                        });
                                                        function addActive(x) {
                                                            if (!x) return false;
                                                            removeActive(x);
                                                            if (currentFocus >= x.length) currentFocus = 0;
                                                            if (currentFocus < 0) currentFocus = (x.length - 1);
                                                            x[currentFocus].classList.add("autocomplete-active");
                                                        }
                                                        function removeActive(x) {
                                                            for (var i = 0; i < x.length; i++) {
                                                                x[i].classList.remove("autocomplete-active");
                                                            }
                                                        }
                                                        function closeAllLists(elmnt) {
                                                            var x = document.getElementsByClassName("autocomplete-items");
                                                            for (var i = 0; i < x.length; i++) {
                                                                if (elmnt != x[i] && elmnt != inp) {
                                                                    x[i].parentNode.removeChild(x[i]);
                                                                }
                                                            }
                                                        }
                                                        document.addEventListener("click", function (e) {
                                                            closeAllLists(e.target);
                                                        });
                    }
                </script>
            </div>
        </aside>
    </section>
    <script>
        var modNms;
                                                        var modLks;
                                                        window.addEventListener("load", function (evt) {
                                                            var fift = 60 * 30,
                                                                display = document.querySelector('#time');
                                                            startTimer(fift, display);
                                                        });
                                                        function startTimer(duration, display) {
                                                            var timer = duration, minutes, seconds;
                                                            setInterval(function () {
                                                                minutes = parseInt(timer / 60, 10);
                                                                seconds = parseInt(timer % 60, 10);

                                                                minutes = minutes < 10 ? "0" + minutes : minutes;
                                                                seconds = seconds < 10 ? "0" + seconds : seconds;

                                                                display.textContent = "Session ends in " + minutes + ":" + seconds;

                                                                if (--timer < 0) {
                                                                    timer = duration;
                                                                    window.location.href = "/Home/LogOut";
                                                                }
                                                            }, 1000);
        }
    </script>
    <!-- end: sidebar -->
    <!-- Vendor -->
    <script src="~/Content/vendor/jquery/jquery.js"></script>
    <script src="~/Content/vendor/jquery-browser-mobile/jquery.browser.mobile.js"></script>
    <script src="~/Content/vendor/popper/umd/popper.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.js"></script>
    <script src="~/Content/vendor/common/common.js"></script>
    <script src="~/Content/vendor/nanoscroller/nanoscroller.js"></script>
    <script src="~/Content/vendor/magnific-popup/jquery.magnific-popup.js"></script>
    <script src="~/Content/vendor/jquery-placeholder/jquery-placeholder.js"></script>

    <!-- Specific Page Vendor -->
    <script src="~/Content/vendor/jquery-appear/jquery-appear.js"></script>
    <script src="~/Content/vendor/owl.carousel/owl.carousel.js"></script>
    <script src="~/Content/vendor/isotope/isotope.js"></script>

    <!-- Theme Base, Components and Settings -->
    <script src="~/Scripts/js/theme.js"></script>

    <!-- Theme Custom -->
    <script src="~/Scripts/js/custom.js"></script>

    <!-- Theme Initialization Files -->
    <script src="~/Scripts/js/theme.init.js"></script>
    <script src="~/Scripts/js/examples/examples.advanced.form.js"></script>
    @RenderBody()
</body>
</html>
